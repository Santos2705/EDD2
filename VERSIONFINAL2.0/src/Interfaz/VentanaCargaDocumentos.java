/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import java.awt.List;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import simulacionso.Documento;
import simulacionso.HashTable;
import simulacionso.Nodo;
import simulacionso.PriorityQueuePrueba;
import simulacionso.RegistroDocs;
import simulacionso.Usuario;

/**
 *
 * @author davidmizrahi
 */
public class VentanaCargaDocumentos extends javax.swing.JFrame {

    /**
     * Creates new form VentanaCargaDocumentos
    
    */
    private Usuario usuarioDocumentos;
    
    private HashTable hashTable = new HashTable();
    
    Documento nuevoDoc;
    
    private PriorityQueuePrueba pq;
    
    private long tiempoInicio;
    
    String[] userNames = new String[100];
    
    public VentanaCargaDocumentos(Usuario usuario, long tiempo) {
        this.usuarioDocumentos = usuario;
        nuevoDoc = new Documento();
        this.pq = new PriorityQueuePrueba();
        this.tiempoInicio = tiempo;
        initComponents();
    }
     public int preguntarPrioridad() {
        // Array de opciones
        Object[] opciones = {"Sí", "No"};

        // Pregunta al usuario
        int respuesta = JOptionPane.showOptionDialog(
                null,
                "¿El documento es prioritario?",
                "Prioridad del Documento",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opciones,
                opciones[0]);

        return respuesta;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        LoadDoc = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldType = new javax.swing.JTextField();
        jTextFieldSize = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        agregarAPQ = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        eliminarDoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Llene los campos correspondientes para cargar un documento");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, -1, -1));

        LoadDoc.setText("Cargar Documento");
        LoadDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadDocActionPerformed(evt);
            }
        });
        jPanel1.add(LoadDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, -1));

        jLabel2.setText("Nombre");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        jLabel3.setText("Tipo");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        jLabel4.setText("Tamaño");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 90, -1));

        jTextFieldType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTypeActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldType, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 90, -1));

        jTextFieldSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSizeActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 90, -1));

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 140, -1));

        agregarAPQ.setText("Manda a imprimir");
        agregarAPQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarAPQActionPerformed(evt);
            }
        });
        jPanel1.add(agregarAPQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 120, -1, -1));

        jLabel5.setText("Seleccione un doc para imprimir o eliminar");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, -1, -1));

        jLabel6.setText("Aqui verá el doc seleccionado");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, -1, -1));

        eliminarDoc.setText("Eliminar Documento");
        eliminarDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarDocActionPerformed(evt);
            }
        });
        jPanel1.add(eliminarDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 250, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 948, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadDocActionPerformed
        // TODO add your handling code here:
        
        
        
        try {
        Double.parseDouble(jTextFieldSize.getText());
        
    
        nuevoDoc = new Documento(jTextFieldName.getText(), Integer.parseInt(jTextFieldSize.getText()),jTextFieldType.getText());
        
//        nuevoDoc.setNombre(jTextFieldName.getText());
//        nuevoDoc.setTipo(jTextFieldType.getText());
//        nuevoDoc.setTamanio(Integer.parseInt(jTextFieldSize.getText()));
        
        usuarioDocumentos.getDocs().agregarElemento(nuevoDoc);
        
        
        
        
         String[] userNames = new String[100]; //tamaño arbitrario para la cantidad de documentos que puede tener un usuario
        
           
//            Nodo temp = gu.getUsuarios().getpFirst();

            Nodo temp = usuarioDocumentos.getDocs().getpFirst();
//            ArrayList<String> userNamesList = new ArrayList<>();
            int i = 0;
            
            
//            Usuario user = (Usuario) temp.getInfo()
            
           while(temp != null){
                
               
                    
                    if(temp.getInfo() instanceof Documento){
                    
                    Documento docInfo = (Documento) temp.getInfo();
//                    userNamesList.add(docInfo.getNombre());
                    
                    userNames[i] = (String) docInfo.getNombre();
//                        System.out.println(userNames[i]);
                    
                    temp = temp.getpNext();
                    i++;
                    
                    
                    
                    
                    
                    }
            
                }
           usuarioDocumentos.getDocs().imprimirValores();
           
           
//           String[] userNamesArray = userNamesList.toArray(new String[0]);
           jList1.setListData(userNames);
//           jList1.addListSelectionListener(new ListSelectionListener() {
//           public void valueChanged(ListSelectionEvent e) {
//                    if (!e.getValueIsAdjusting()) {
//                        // Acciones que deseas realizar cuando se selecciona un usuario
//                        String selectedDoc = jList1.getSelectedValue();
//                        
//                       Nodo aux = usuarioDocumentos.getDocs().getpFirst();
//                       
//                        System.out.println("Usuario seleccionado: " + selectedDoc );
//                        
//                        while(aux != null){
//                           if(aux.getInfo() instanceof Documento){
//                           Documento temp = (Documento)aux.getInfo();
//                           
//                           if (selectedDoc.equals(temp.getNombre())){
//                               System.out.println("Usuario seleccionado: " + temp.getNombre());
//                               jTextArea1.append(selectedDoc);
////                               
//                                break;
//                           } else {
//                               aux = aux.getpNext();
//                           }
//                            aux = aux.getpNext();
//                       }
//                       }
//                    }   
//           }
//           });
        
        
        JOptionPane.showMessageDialog(rootPane, "Documento Cargado Existosamente!");
        jTextFieldName.setText("");
        jTextFieldType.setText("");
        jTextFieldSize.setText("");
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(rootPane, "Falla a la hora de cargar Documento, asegurese de llenar los campos correctamente!");
    }
        
    }//GEN-LAST:event_LoadDocActionPerformed

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jTextFieldTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTypeActionPerformed

    private void jTextFieldSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSizeActionPerformed

    private void agregarAPQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarAPQActionPerformed
        // TODO add your handling code here:
        RegistroDocs registro = new RegistroDocs();
        registro.setTiempoTranscurrido(tiempoInicio);
        
        
        int respuesta = preguntarPrioridad();

        // Verificar la respuesta del usuario
        if (respuesta == JOptionPane.YES_OPTION) {
             
            // Restar tiempo al tiempo transcurrido para aumentar la prioridad
            
            switch (usuarioDocumentos.getTipo_prioridad()) {
                case "prioridad_alta":
                    registro.restarTiempo(100);
                    break;
                case "prioridad_media":
                    registro.restarTiempo(60);
                    break;
                case "prioridad_baja":
                    registro.restarTiempo(20);
                    break;
                // Agrega más casos según sea necesario
            }
            
        }
        registro.setDocumento(nuevoDoc);

        
            
            // Lógica para el caso 'Sí'
//         else if (respuesta == JOptionPane.NO_OPTION || respuesta == JOptionPane.CLOSED_OPTION) {
//            System.out.println("El usuario seleccionó 'No' o cerró la ventana");
//            // Lógica para el caso 'No' o si la ventana se cerró
//        }
        pq.add(registro);
        
        hashTable.insertar(usuarioDocumentos);
        
        
        ImprimirDoc imprimir = new ImprimirDoc(pq);
        imprimir.setVisible(true);
        
    

   

    }//GEN-LAST:event_agregarAPQActionPerformed

    private void eliminarDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarDocActionPerformed
        // TODO add your handling code here:
        String nombreDoc = jTextArea1.getText();
        
        Nodo aux = usuarioDocumentos.getDocs().getpFirst();
        
        if(aux.getInfo() instanceof Documento){
            Documento doc = (Documento)aux.getpNext().getInfo();
            
            if(doc.getNombre().equals(nombreDoc)){
                aux = aux.getpNext().getpNext();
            }
            else{
                aux = aux.getpNext();
            }
                
                
            
            
        }
        
        
    }//GEN-LAST:event_eliminarDocActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCargaDocumentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCargaDocumentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCargaDocumentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCargaDocumentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new VentanaCargaDocumentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LoadDoc;
    private javax.swing.JButton agregarAPQ;
    private javax.swing.JButton eliminarDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldSize;
    private javax.swing.JTextField jTextFieldType;
    // End of variables declaration//GEN-END:variables
}
